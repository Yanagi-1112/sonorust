permissions:
  contents: write

name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive-name: linux
            archive-suffix: tar.gz
            archive-cmd: tar czf
            executable-suffix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive-name: windows
            archive-suffix: zip
            archive-cmd: 7z a
            executable-suffix: .exe

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cargo-about
        run: cargo install cargo-about

      - name: Build
        run: cargo build --release

      - name: Generate License
        run: |
          echo "accepted = ['Apache-2.0','MIT','BSD-3-Clause','Zlib','MPL-2.0','Unicode-DFS-2016','ISC','OpenSSL','OpenSSL-standalone','SSLeay-standalone','GPL-1.0','LicenseRef-scancode-public-domain','LicenseRef-scancode-unknown-license-reference', 'Unicode-3.0', 'CC0-1.0', 'BSL-1.0']" > about.toml
          cargo about init
          cargo about generate about.hbs -o ThirdPartyLicenses.html

      - name: Create Release Archive
        shell: bash
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          RELEASE_NAME="${REPO_NAME}-${TAG_NAME}-${{ matrix.archive-name }}"

          mkdir -p "${RELEASE_NAME}"
          cp "target/release/${REPO_NAME}${{ matrix.executable-suffix }}" "${RELEASE_NAME}/"
          cp LICENSE README.md ThirdPartyLicenses.html "${RELEASE_NAME}/"
          ${{ matrix.archive-cmd }} "${RELEASE_NAME}.${{ matrix.archive-suffix }}" "${RELEASE_NAME}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.${{ matrix.archive-suffix }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
